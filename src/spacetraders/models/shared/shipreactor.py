"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import shiprequirements as shared_shiprequirements
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from spacetraders import utils
from typing import Optional

class ShipReactorSymbol(str, Enum):
    REACTOR_SOLAR_I = 'REACTOR_SOLAR_I'
    REACTOR_FUSION_I = 'REACTOR_FUSION_I'
    REACTOR_FISSION_I = 'REACTOR_FISSION_I'
    REACTOR_CHEMICAL_I = 'REACTOR_CHEMICAL_I'
    REACTOR_ANTIMATTER_I = 'REACTOR_ANTIMATTER_I'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ShipReactor:
    r"""The reactor of the ship. The reactor is responsible for powering the ship's systems and weapons."""
    
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    power_output: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('powerOutput') }})
    requirements: shared_shiprequirements.ShipRequirements = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requirements') }})
    r"""The requirements for installation on a ship"""
    symbol: ShipReactorSymbol = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('symbol') }})
    condition: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('condition'), 'exclude': lambda f: f is None }})
    r"""Condition is a range of 0 to 100 where 0 is completely worn out and 100 is brand new."""
    