"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import connectedsystem as shared_connectedsystem
from dataclasses_json import Undefined, dataclass_json
from spacetraders import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class JumpGate:
    connected_systems: list[shared_connectedsystem.ConnectedSystem] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connectedSystems') }})
    r"""The systems within range of the gate that have a corresponding gate."""
    jump_range: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jumpRange') }})
    r"""The maximum jump range of the gate."""
    faction_symbol: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('factionSymbol'), 'exclude': lambda f: f is None }})
    r"""The symbol of the faction that owns the gate."""
    

