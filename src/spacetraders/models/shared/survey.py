"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import surveydeposit as shared_surveydeposit
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from spacetraders import utils

class SurveySize(str, Enum):
    r"""The size of the deposit. This value indicates how much can be extracted from the survey before it is exhausted."""
    SMALL = 'SMALL'
    MODERATE = 'MODERATE'
    LARGE = 'LARGE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Survey:
    r"""A resource survey of a waypoint, detailing a specific extraction location and the types of resources that can be found there."""
    
    deposits: list[shared_surveydeposit.SurveyDeposit] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deposits') }})
    r"""A list of deposits that can be found at this location."""
    expiration: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiration'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The date and time when the survey expires. After this date and time, the survey will no longer be available for extraction."""
    signature: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signature') }})
    r"""A unique signature for the location of this survey. This signature is verified when attempting an extraction using this survey."""
    size: SurveySize = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('size') }})
    r"""The size of the deposit. This value indicates how much can be extracted from the survey before it is exhausted."""
    symbol: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('symbol') }})
    r"""The symbol of the waypoint that this survey is for."""
    