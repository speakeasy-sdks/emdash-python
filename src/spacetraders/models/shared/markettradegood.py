"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from spacetraders import utils

class MarketTradeGoodSupply(str, Enum):
    r"""A rough estimate of the total supply of this good in the marketplace."""
    SCARCE = 'SCARCE'
    LIMITED = 'LIMITED'
    MODERATE = 'MODERATE'
    ABUNDANT = 'ABUNDANT'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class MarketTradeGood:
    purchase_price: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('purchasePrice') }})
    r"""The price at which this good can be purchased from the market."""
    sell_price: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sellPrice') }})
    r"""The price at which this good can be sold to the market."""
    supply: MarketTradeGoodSupply = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supply') }})
    r"""A rough estimate of the total supply of this good in the marketplace."""
    symbol: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('symbol') }})
    r"""The symbol of the trade good."""
    trade_volume: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tradeVolume') }})
    r"""The typical volume flowing through the market for this type of good. The larger the trade volume, the more stable prices will be."""
    

