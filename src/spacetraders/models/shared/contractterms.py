"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import contractdelivergood as shared_contractdelivergood
from ..shared import contractpayment as shared_contractpayment
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from spacetraders import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContractTerms:
    
    deadline: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deadline'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The deadline for the contract."""
    payment: shared_contractpayment.ContractPayment = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payment') }})
    deliver: Optional[list[shared_contractdelivergood.ContractDeliverGood]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliver'), 'exclude': lambda f: f is None }})
    