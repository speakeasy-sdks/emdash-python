"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import agent as shared_agent
from ..shared import contract as shared_contract
from ..shared import faction as shared_faction
from ..shared import ship as shared_ship
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from spacetraders import utils
from typing import Optional

class RegisterRequestBodyFaction(str, Enum):
    r"""The faction you choose determines your headquarters."""
    COSMIC = 'COSMIC'
    VOID = 'VOID'
    GALACTIC = 'GALACTIC'
    QUANTUM = 'QUANTUM'
    DOMINION = 'DOMINION'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class RegisterRequestBody:
    faction: RegisterRequestBodyFaction = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('faction') }})
    r"""The faction you choose determines your headquarters."""
    symbol: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('symbol') }})
    r"""How other agents will see your ships and information."""
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""Your email address. This is used if you reserved your call sign between resets."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class Register201ApplicationJSONData:
    agent: shared_agent.Agent = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('agent') }})
    contract: shared_contract.Contract = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contract') }})
    faction: shared_faction.Faction = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('faction') }})
    ship: shared_ship.Ship = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ship') }})
    r"""A ship"""
    token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token') }})
    r"""A Bearer token for accessing secured API endpoints."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class Register201ApplicationJSON:
    r"""OK"""
    data: Register201ApplicationJSONData = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data') }})
    




@dataclasses.dataclass
class RegisterResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    register_201_application_json_object: Optional[Register201ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""
    

